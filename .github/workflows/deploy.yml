name: Build and Deploy Documentation

on:
  # Manual trigger to update specs and deploy
  workflow_dispatch:
    inputs:
      message:
        description: 'Deployment message'
        required: false
        default: 'Deploy with latest Canon Protocol specifications'
  
  # Optional: Run weekly to catch any spec updates
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight
  
  # Still allow push to main for website code changes only
  # (without necessarily updating specs)
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'static/**'
      - 'docusaurus.config.ts'
      - 'package*.json'
      - '.github/workflows/deploy.yml'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout website repository
        uses: actions/checkout@v4
        
      - name: Checkout canon repository
        uses: actions/checkout@v4
        with:
          repository: canon-protocol/canon
          path: canon-specs
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          
      - name: Install dependencies
        run: npm ci
        
      - name: Process Canon specifications
        run: |
          echo "ðŸ“š Fetching latest Canon Protocol specifications..."
          node scripts/process-specs.js
        
      - name: Build website
        run: npm run build
        
      - name: Preserve .well-known directory
        run: |
          if [ -d ".well-known" ]; then
            cp -r .well-known ./build/
          fi
          
      - name: Preserve CNAME file
        run: |
          if [ -f "CNAME" ]; then
            cp CNAME ./build/
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4